import React, { useState, useCallback, useMemo } from 'react';
import * as S from './FileButton.styled';
import { FileInputButtonProps } from './FileButton.types';
import { FILE_ACCEPT_VALUES } from './constants';

export const RawFileButton: React.FC<FileInputButtonProps> = ({ onChange, value, fileType }) => {
  const [fileName, setFileName] = useState<string>(''); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
  const handleFileChange = useCallback(
    (event: React.ChangeEvent<HTMLInputElement>) => {
      console.log('–§–∞–π–ª –∏–∑–º–µ–Ω–µ–Ω: ', event.target.files); // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ event.target.files

      const file = event.target.files ? event.target.files[0] : null;
      if (file) {
        console.log('–§–∞–π–ª –≤—ã–±—Ä–∞–Ω:', file.name); // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        setFileName(file.name); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        onChange(file); // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±–µ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
      } else {
        console.log('–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
        setFileName(''); // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        onChange(null); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º null –≤ –∫–æ–ª–±–µ–∫, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω
      }
    },
    [onChange]
  );

  const accept = useMemo(() => fileType && FILE_ACCEPT_VALUES[fileType], [fileType]);

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É

  return (
    <S.Container>
      <S.FilenameContainer>
        <S.Filename>{fileName ? fileName : value ? '–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω' : '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª'}</S.Filename>
        {fileName ? '‚úÖ' : value ? 'üìå' : ''}
      </S.FilenameContainer>
      <input type='file' style={{ display: 'none' }} onChange={handleFileChange} accept={accept} />
    </S.Container>
  );
};

export default RawFileButton;
